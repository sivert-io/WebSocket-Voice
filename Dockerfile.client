# Multi-stage build for Gryt Web Client
FROM node:18-alpine AS builder

WORKDIR /app

# Copy package files
COPY client/package*.json ./

# Install dependencies
RUN npm ci --only=production

# Copy source code
COPY client/ .

# Build the application
RUN npm run build

# Production stage with nginx
FROM nginx:alpine

# Create nginx config
RUN echo 'events { worker_connections 1024; }' > /etc/nginx/nginx.conf && \
  echo 'http {' >> /etc/nginx/nginx.conf && \
  echo '  include /etc/nginx/mime.types;' >> /etc/nginx/nginx.conf && \
  echo '  default_type application/octet-stream;' >> /etc/nginx/nginx.conf && \
  echo '  sendfile on;' >> /etc/nginx/nginx.conf && \
  echo '  keepalive_timeout 65;' >> /etc/nginx/nginx.conf && \
  echo '  gzip on;' >> /etc/nginx/nginx.conf && \
  echo '  server {' >> /etc/nginx/nginx.conf && \
  echo '    listen 80;' >> /etc/nginx/nginx.conf && \
  echo '    root /usr/share/nginx/html;' >> /etc/nginx/nginx.conf && \
  echo '    index index.html;' >> /etc/nginx/nginx.conf && \
  echo '    location / { try_files $uri $uri/ /index.html; }' >> /etc/nginx/nginx.conf && \
  echo '    location /health { return 200 "healthy"; add_header Content-Type text/plain; }' >> /etc/nginx/nginx.conf && \
  echo '  }' >> /etc/nginx/nginx.conf && \
  echo '}' >> /etc/nginx/nginx.conf

# Copy built assets
COPY --from=builder /app/dist /usr/share/nginx/html

# Expose port
EXPOSE 80

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD wget --no-verbose --tries=1 --spider http://localhost/ || exit 1

CMD ["nginx", "-g", "daemon off;"] 