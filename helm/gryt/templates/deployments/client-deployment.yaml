{{- if .Values.client.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "gryt.fullname" . }}-client
  labels:
    {{- include "gryt.client.labels" . | nindent 4 }}
  {{- with (include "gryt.annotations" .) }}
  annotations:
    {{- . | nindent 4 }}
  {{- end }}
spec:
  {{- if not .Values.client.autoscaling.enabled }}
  replicas: {{ .Values.client.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "gryt.client.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "gryt.client.selectorLabels" . | nindent 8 }}
      {{- with (include "gryt.annotations" .) }}
      annotations:
        {{- . | nindent 8 }}
      {{- end }}
    spec:
      {{- with .Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "gryt.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.security.podSecurityContext | nindent 8 }}
      containers:
      - name: client
        image: {{ include "gryt.image" .Values.client.image }}
        imagePullPolicy: {{ .Values.client.image.pullPolicy }}
        ports:
        - name: http
          containerPort: {{ .Values.client.service.port }}
          protocol: TCP
        resources:
          {{- toYaml .Values.client.resources | nindent 10 }}
        {{- if .Values.client.healthCheck.enabled }}
        livenessProbe:
          httpGet:
            path: {{ .Values.client.healthCheck.path }}
            port: {{ .Values.client.service.port }}
          initialDelaySeconds: {{ .Values.client.healthCheck.initialDelaySeconds }}
          periodSeconds: {{ .Values.client.healthCheck.periodSeconds }}
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: {{ .Values.client.healthCheck.path }}
            port: {{ .Values.client.service.port }}
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        {{- end }}
        securityContext:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          runAsUser: 101  # nginx user
          runAsGroup: 101
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: nginx-config
          mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
          readOnly: true
        - name: nginx-cache
          mountPath: /var/cache/nginx
        - name: nginx-run
          mountPath: /var/run
        - name: nginx-logs
          mountPath: /var/log/nginx
      volumes:
      - name: nginx-config
        configMap:
          name: {{ include "gryt.fullname" . }}-config
          items:
          - key: nginx.conf
            path: nginx.conf
      - name: nginx-cache
        emptyDir: {}
      - name: nginx-run
        emptyDir: {}
      - name: nginx-logs
        emptyDir: {}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}

{{- if .Values.client.autoscaling.enabled }}
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: {{ include "gryt.fullname" . }}-client-hpa
  labels:
    {{- include "gryt.client.labels" . | nindent 4 }}
  {{- with (include "gryt.annotations" .) }}
  annotations:
    {{- . | nindent 4 }}
  {{- end }}
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: {{ include "gryt.fullname" . }}-client
  minReplicas: {{ .Values.client.autoscaling.minReplicas }}
  maxReplicas: {{ .Values.client.autoscaling.maxReplicas }}
  metrics:
  {{- if .Values.client.autoscaling.targetCPUUtilizationPercentage }}
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: {{ .Values.client.autoscaling.targetCPUUtilizationPercentage }}
  {{- end }}
  {{- if .Values.client.autoscaling.targetMemoryUtilizationPercentage }}
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: {{ .Values.client.autoscaling.targetMemoryUtilizationPercentage }}
  {{- end }}
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 20
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 60
{{- end }}
{{- end }} 