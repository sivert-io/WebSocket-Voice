{{- if .Values.server.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "gryt.fullname" . }}-server
  labels:
    {{- include "gryt.server.labels" . | nindent 4 }}
  {{- with (include "gryt.annotations" .) }}
  annotations:
    {{- . | nindent 4 }}
  {{- end }}
spec:
  {{- if not .Values.server.autoscaling.enabled }}
  replicas: {{ .Values.server.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "gryt.server.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "gryt.server.selectorLabels" . | nindent 8 }}
      {{- with (include "gryt.annotations" .) }}
      annotations:
        {{- . | nindent 8 }}
      {{- end }}
    spec:
      {{- with .Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "gryt.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.security.podSecurityContext | nindent 8 }}
      containers:
      - name: server
        image: {{ include "gryt.image" .Values.server.image }}
        imagePullPolicy: {{ .Values.server.image.pullPolicy }}
        ports:
        - name: websocket
          containerPort: {{ .Values.server.service.port }}
          protocol: TCP
        env:
        - name: PORT
          valueFrom:
            configMapKeyRef:
              name: {{ include "gryt.fullname" . }}-config
              key: SERVER_PORT
        - name: NODE_ENV
          valueFrom:
            configMapKeyRef:
              name: {{ include "gryt.fullname" . }}-config
              key: NODE_ENV
        - name: SERVER_NAME
          valueFrom:
            configMapKeyRef:
              name: {{ include "gryt.fullname" . }}-config
              key: SERVER_NAME
        - name: SERVER_ICON
          valueFrom:
            configMapKeyRef:
              name: {{ include "gryt.fullname" . }}-config
              key: SERVER_ICON
        - name: GRYT_AUTH_API
          valueFrom:
            configMapKeyRef:
              name: {{ include "gryt.fullname" . }}-config
              key: GRYT_AUTH_API
        - name: STUN_SERVERS
          valueFrom:
            configMapKeyRef:
              name: {{ include "gryt.fullname" . }}-config
              key: STUN_SERVERS
        - name: SFU_WS_HOST
          valueFrom:
            secretKeyRef:
              name: {{ include "gryt.fullname" . }}-secrets
              key: SFU_WS_HOST
        - name: SERVER_TOKEN
          valueFrom:
            secretKeyRef:
              name: {{ include "gryt.fullname" . }}-secrets
              key: SERVER_TOKEN
        - name: CORS_ORIGIN
          valueFrom:
            secretKeyRef:
              name: {{ include "gryt.fullname" . }}-secrets
              key: CORS_ORIGIN
        {{- range $key, $value := .Values.server.env }}
        {{- if not (has $key (list "PORT" "NODE_ENV" "SERVER_NAME" "SERVER_ICON")) }}
        - name: {{ $key }}
          value: {{ $value | quote }}
        {{- end }}
        {{- end }}
        resources:
          {{- toYaml .Values.server.resources | nindent 10 }}
        {{- if .Values.server.healthCheck.enabled }}
        livenessProbe:
          httpGet:
            path: {{ .Values.server.healthCheck.path }}
            port: {{ .Values.server.service.port }}
          initialDelaySeconds: {{ .Values.server.healthCheck.initialDelaySeconds }}
          periodSeconds: {{ .Values.server.healthCheck.periodSeconds }}
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: {{ .Values.server.healthCheck.path }}
            port: {{ .Values.server.service.port }}
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        {{- end }}
        securityContext:
          {{- toYaml .Values.security.securityContext | nindent 10 }}
        volumeMounts:
        - name: tmp
          mountPath: /tmp
      volumes:
      - name: tmp
        emptyDir: {}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}

{{- if .Values.server.autoscaling.enabled }}
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: {{ include "gryt.fullname" . }}-server-hpa
  labels:
    {{- include "gryt.server.labels" . | nindent 4 }}
  {{- with (include "gryt.annotations" .) }}
  annotations:
    {{- . | nindent 4 }}
  {{- end }}
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: {{ include "gryt.fullname" . }}-server
  minReplicas: {{ .Values.server.autoscaling.minReplicas }}
  maxReplicas: {{ .Values.server.autoscaling.maxReplicas }}
  metrics:
  {{- if .Values.server.autoscaling.targetCPUUtilizationPercentage }}
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: {{ .Values.server.autoscaling.targetCPUUtilizationPercentage }}
  {{- end }}
  {{- if .Values.server.autoscaling.targetMemoryUtilizationPercentage }}
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: {{ .Values.server.autoscaling.targetMemoryUtilizationPercentage }}
  {{- end }}
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
{{- end }}
{{- end }} 